% Generated by roxygen2 (4.0.2): do not edit by hand
\name{createDotStatXML}
\alias{createDimension}
\alias{createDotStatXML}
\alias{listToXml}
\title{createDotStatXML}
\usage{
createDotStatXML(contacts = NULL, notifications = "f", owners = NULL,
  security = NULL, ds_names = NULL, ds_code = NULL, languages = NULL,
  action = NULL, updatequeries = NULL, theme = NULL, dir = NULL,
  nbdims = NULL, dim_names_e = NULL, dim_names_f = NULL,
  dim_codes = NULL, dim_common = NULL, dim_members_columns = NULL,
  dim_members_csv = NULL, data_csv = NULL, data_flags = NULL,
  flags_csv = NULL, domain = NULL, entrygate = NULL, csv_folder = NULL,
  xml_filename = "R_createDotStat.xml", useExe = TRUE, print = FALSE)

createDimension(code = stop("\\"code\\" must be specified"),
  nameen = stop("\\"nameen\\" must be specified"),
  namefr = stop("\\"namefr\\" must be specified"), common = FALSE,
  data = data, langEN = "1033", langFR = "1036", cr = "\\n")

listToXml(item, tag)
}
\arguments{
\item{contacts}{character string author Windows account}

\item{notifications}{character, empty string or one of the following: \code{N} no notification is needed, \code{W} on warning, \code{F} on failure or \code{S} on success}

\item{ds_code}{dataset code identifier, e.g. STI_STANi4_2015_v0 [direction]_[label]_[year]_[version]}

\item{action}{character string one of \code{CREATE}, \code{UPDATE}, \code{REPLACEALL} or \code{DELETE}}

\item{updatequeries}{logical to update dotstat queries}

\item{theme}{character string to location of dataset in dotstat}

\item{domain}{character string doamin, usually \code{OECDMAIN}}

\item{useExe}{logical to use command line tool at \code{\\\\dotstat\\Data\\UserUtilities\\DataProviderInterface\\CreateDotStatXml.exe}}

\item{langEN}{integer value to specify language ID for English (default: 1033)}

\item{langFR}{integer value to specify language ID for French (default: 1036)}

\item{exdir}{character string to specify output location}

\item{direction}{character string [direction]/[division]}

\item{email}{character string author email address}

\item{datasetnameEN}{character string for dataset label in English}

\item{datasetnameFR}{character string for dataset label in French}

\item{dimensions.list}{a list with dimension members and dimension metadata}
}
\description{
Send file to createDotStatXML procedure

\code{createDimension}: function to create list for each dimension in data

\code{listToXml}: function to create xml from list. copied from https://github.com/PecanProject/pecan/blob/master/utils/R/utils.R
}
\details{
Use the createDotStatXML command line tool to upload data in OECD.Stat

createDimension(code, nameen, namefr, common, data, langEN, langFR)

listToXml(item, tag)
}
\examples{
vignette(topic = "createDotStatXML", package = "stan")

source(file.path(dbpath, "GitHub", "stanData", "data-raw", "DOTSTAT", "exportSTANi4SA10.R"))

contacts="Werth_B"
notifications="f"
owners="Werth_B"
security="Werth_B"
ds_names=c("STANi4 Test5", "STANi4 Test5")
ds_code="STANi4SA10_10"
languages=c("en", "fr")
action="Create"
updatequeries=TRUE # exe uses "1" and "0"
theme="Industry and Services|Structural Analysis (STAN) Databases"
dir="STI"
nbdims=4
dim_names_e=c("Country", "Variable", "Industry", "Time")
dim_names_f=c("Pays", "Variable", "Industrie", "Temps")
dim_codes=c("LOCATION", "VAR", "IND", "TIME");
dim_common=c("LOCATION", "*", "*", "TIME");
dim_members_columns=c("\\\\*", shQuote("CLO"), shQuote("CPLO"), "\\\\*")
dim_members_csv=c("*", "dim_Var.txt", "dim_Ind.txt", "*")
data_flags="false"
domain="OECDMAIN"
entrygate="STI - Structural Analysis (STAN) Databases"
xml_filename="CREATE_STANi4SA10.xml"
print=FALSE
## useExe=TRUE

test <- createDotStatXML(contacts=contacts, notifications=notifications, owners=owners, security=security, ds_names=ds_names, ds_code=ds_code, languages=languages, action=action, updatequeries=updatequeries, theme=theme, dir=dir, nbdims=nbdims, dim_names_e=dim_names_e, dim_names_f=dim_names_f, dim_codes=dim_codes, dim_common=dim_common, dim_members_columns=dim_members_columns, dim_members_csv=dim_members_csv, data_flags=data_flags, domain=domain, entrygate=entrygate, csv_folder=csv_folder, xml_filename=xml_filename, print=TRUE)
cat(test)
require(stanData)
data(STANNAi4)
data=DATA.STANi4[sample(c(1:nrow(DATA.STANi4)), 100),]

code.year <- c(min(data[["year"]]):max(data[["year"]]))
dimYear.df <- data.frame(Key=code.year,
                         KeyParent=code.year,
                         NameEN=code.year,
                         NameFR=code.year,
                         Order=seq(along=code.year))

create.dimensions.list <- list(year=
                                   list(code="TIME",
                                        nameen="Time",
                                        namefr="Temps",
                                        common=TRUE,
                                        data=dimYear.df)
                               )

dimensions.list <- lapply(create.dimensions.list,
                          function (x) createDimension(code=x$code,
                                                             nameen=x$nameen,
                                                             namefr=x$namefr,
                                                             common=x$common,
                                                             data=x$data
                                                             ))

names(dimensions.list) <- rep("Dimension", length(dimensions.list))
}
\author{
OECD STAN
}
\seealso{
\code{\link{createDimension}}, \code{vignette("createDotStatXML")}
}
\keyword{SQL}

